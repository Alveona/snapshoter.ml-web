{"version":3,"sources":["logo.png","controllers/UrlController.js","controllers/StatsController.js","components/Home.js","components/Stats.js","components/About.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","shortener","url","a","axios","post","JSON","stringify","recent","get","mostClicked","Home","props","inputValueChange","value","setState","error","shrink","state","copy","input","document","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","buttonText","setTimeout","this","bind","validURL","UrlController","then","response","console","log","data","snapshot_url","imgVisible","imgUrl","reset","str","RegExp","test","clicks","className","id","type","name","onChange","e","target","placeholder","required","onClick","src","React","Component","copyURL","Stats","btnClick","show","StatsController","scope","map","c","i","key","href","hash","width","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","count","About","App","height","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d466bae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.92193561.png\";","import axios from 'axios';\n\nclass UrlController {\n    shortener = async (url) => {\n        return await axios.post(\n            'http://127.0.0.1:8000/api/snapshot',\n            JSON.stringify({ url: url })\n        );\n    };\n}\n\nexport default (new UrlController());","import axios from 'axios';\n\nclass StatsController {\n    recent = async () => {\n        return await axios.get(\n            'https://devro.club/api/shortener/stats?order=recent'\n        );\n    };\n\n    mostClicked = async () => {\n        return await axios.get(\n            'https://devro.club/api/shortener/stats?order=clicks'\n        );\n    };\n\n}\n\nexport default (new StatsController());","import React from 'react';\nimport UrlController from \"../controllers/UrlController\";\nimport StatsController from \"../controllers/StatsController\";\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n            copy: null,\n            buttonText: \"Screenshot\",\n            error: null,\n            clicks: null,\n            imgVisible: true,\n            // imgUrl: null\n            imgUrl: \"https://cloud.alveona.ml/files/3cf2c7bf964e4c448b37186b0eba8263page_screenshot.png\"\n        };\n\n        // StatsController.mostClicked().then((response) => {\n        //     this.setState({ clicks: response.data });\n        // });\n    }\n\n    render() {\n        return (\n            <div className=\"Home container\">\n                <h1 className=\"topic\">Get a web page screenshot in just few seconds!</h1>\n\n                <div className=\"col-sm-12 col-md-8 offset-md-2\">\n                    <div id=\"url\">\n                        <div id=\"url-input\">\n                            <input type=\"url\" name=\"url\" value={this.state.url} onChange={(e) => {\n                                this.inputValueChange(e.target.value)\n                            }} placeholder=\"Paste a page URL\" required />\n                            <p className=\"error\">{this.state.error}</p>\n                        </div>\n                        <button id={this.state.copy} onClick={() => {\n                            this.shrink()\n                        }} className=\"buttonmain\">{this.state.buttonText}</button>\n                        {this.state.copy &&\n                            <button onClick={() => {\n                                this.reset()\n                            }} className=\"buttonmain\">Reset</button>\n                        }\n                    </div>\n                </div>\n\n\n                {/* <h2>â€¢ Mostly clicked shorted links</h2> */}\n                {console.log(this.state.imgVisible)}\n                {this.state.imgVisible ?\n                    <div className=\"result-image-div\">\n                        <div className=\"result-image-text\">Click to Download</div>\n                        <img className=\"result-image\" src={this.state.imgUrl}></img>\n\n                    </div> : null}\n            </div>\n        );\n    }\n\n    static copyURL = (url) => {\n        let input = document.createElement('input');\n        input.setAttribute('value', \"https://devro.club/\" + url);\n        document.body.appendChild(input);\n        input.select();\n        document.execCommand('copy');\n        document.body.removeChild(input);\n    };\n\n    inputValueChange = (value) => {\n        this.setState({ url: value });\n        this.setState({ error: '' });\n    };\n\n    shrink = () => {\n        if (this.state.copy) {\n            let input = document.createElement('input');\n            input.setAttribute('value', this.state.url);\n            document.body.appendChild(input);\n            input.select();\n            document.execCommand('copy');\n            document.body.removeChild(input);\n\n            this.setState({ buttonText: \"Copied!\" });\n            setTimeout(\n                function () {\n                    this.setState({ buttonText: \"Copy to Clipboard\" });\n                }.bind(this),\n                1000\n            );\n        } else {\n            if (this.state.url === '') {\n                this.setState({ error: \"URL field is required.\" });\n            } else if (!this.validURL(this.state.url)) {\n                this.setState({ error: \"URL entered is invalid.\" });\n            } else {\n                UrlController.shortener(this.state.url).then((response) => {\n                    console.log(response.data)\n                    this.setState({ url: response.data.snapshot_url });\n                    this.setState({ imgVisible: true });\n                    this.setState({ imgUrl: response.data.snapshot_url });\n                    this.setState({ copy: \"copy\" });\n                    this.setState({ buttonText: \"Copy to Clipboard\" });\n                });\n            }\n        }\n    };\n\n    reset = () => {\n        this.setState({ copy: null });\n        this.setState({ url: '' });\n        this.setState({ buttonText: \"Screenshot\" });\n        this.setState({ imgVisible: false });\n    };\n\n    validURL = (str) => {\n        let pattern = new RegExp('^(ftp|http|https):\\/\\/[^ \"]+$');\n        return !!pattern.test(str);\n    }\n}","import React from 'react';\nimport StatsController from \"../controllers/StatsController\";\nimport Home from \"./Home\";\n\nexport default class Stats extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicks: null,\n            recent: null,\n            show: \"recent\"\n        };\n\n        StatsController.recent().then((response) => {\n            this.setState({recent: response.data});\n        });\n\n        StatsController.mostClicked().then((response) => {\n            this.setState({clicks: response.data});\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Stats container\">\n                <h2>Our statistics are open to everyone. Every click and every link â†’</h2>\n                <button type=\"button\" onClick={() => {\n                    this.btnClick()\n                }}\n                        className=\"btn btn-sm btn-custom\">{this.state.show === \"clicks\" ? \"Most Clicked\" : \"Most Recent\"}</button>\n\n                <div className=\"col-sm-12 col-md-10 offset-md-1\">\n                    <table className=\"table table-borderless text-left table-responsive\">\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">Source</th>\n                            <th scope=\"col\">Links</th>\n                            <th scope=\"col\">Clicks</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.show === \"recent\" && this.state.recent && this.state.recent.map((c, i) =>\n                            <tr key={i}>\n                                <td className=\"source\">{c.url}</td>\n                                <td>\n                                    <a target=\"_blank\" className=\"link\" href={\"https://devro.club/\" + c.hash}>https://devro.club/{c.hash}</a>\n                                    &nbsp;&nbsp;\n                                    <svg onClick={() => {Home.copyURL(c.hash)}} width=\"14px\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"copy\"\n                                         className=\"svg-inline--fa fa-copy fa-w-14\" role=\"img\"\n                                         xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n                                        <path fill=\"currentColor\"\n                                              d=\"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z\"></path>\n                                    </svg>\n                                </td>\n                                <td>{c.count}</td>\n                            </tr>\n                        )}\n\n                        {this.state.show === \"clicks\" && this.state.clicks && this.state.clicks.map((c, i) =>\n                            <tr key={i}>\n                                <td className=\"source\">{c.url}</td>\n                                <td>\n                                    <a target=\"_blank\" className=\"link\" href={\"https://devro.club/\" + c.hash}>https://devro.club/{c.hash}</a>\n                                    &nbsp;&nbsp;\n                                    <svg onClick={() => {Home.copyURL(c.hash)}} width=\"14px\" aria-hidden=\"true\" focusable=\"false\" data-prefix=\"far\" data-icon=\"copy\"\n                                         className=\"svg-inline--fa fa-copy fa-w-14\" role=\"img\"\n                                         xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n                                        <path fill=\"currentColor\"\n                                              d=\"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z\"></path>\n                                    </svg>\n                                </td>\n                                <td>{c.count}</td>\n                            </tr>\n                        )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n\n    btnClick = () => {\n        if (this.state.show === \"recent\") {\n            this.setState({show: \"clicks\"});\n        } else {\n            this.setState({show: \"recent\"});\n        }\n    };\n\n}","import React from 'react';\n\nexport default class About extends React.Component {\n\n    render() {\n        return (\n            <div className=\"About container\">\n                <h1>Get an instant and free page screenshots at snapshoter.ml</h1>\n                <p>No charge. No subscriptions. Paste a link and here you go!</p>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport logo from '../logo.png';\nimport './App.css';\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\nimport Stats from \"./Stats\";\nimport About from \"./About\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <nav className=\"navbar navbar-expand-md navbar-light\">\n                    <div className=\"container\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            <img height=\"40px\" src={logo} alt=\"Site logo\" />\n                        </a>\n\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav ml-auto\">\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" href=\"/about\">ABOUT</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" target=\"_blank\" href=\"/api/docs\">API</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </nav>\n                <Route exact={true} path='/' render={(props) => (\n                    <Home {...props} />\n                )} />\n                <Route exact={true} path='/about' render={(props) => (\n                    <About {...props} />\n                )} />\n                <Route exact={true} path='/stats' render={(props) => (\n                    <Stats {...props} />\n                )} />\n                <div className=\"footer-bottom\">\n                    <span className=\"text-center\">Â© 2020 snapshoter.ml | <a className=\"github\"\n                        href=\"https://github.com/Alveona\"\n                        target=\"_blank\">Author's GitHub</a></span>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}